export function barahaToUnicode(text) {
  for (
    var e = [
        "\u00FB",
        "",
        "\u00FC",
        "",
        "\u00E3",
        "\u00E5",
        "\u00C1",
        "\u0950",
        "\u00FE",
        "\u0951",
        "\u00FD",
        "\u0952",
        "\u00C2",
        "\u0930\u0941",
        "\u00C3",
        "\u0930\u0942",
        "\u00C4Q",
        "\u0921\u093C",
        "\u00C4R",
        "\u0922\u093C",
        "\u00C4T",
        "\u095E",
        "\u00C4e",
        "\u095B\u094D",
        "\u201A",
        "\u0915\u094D\u0915",
        "\u0192\u00A1",
        "\u0919\u094D\u0915",
        "\u201E\u00A1",
        "\u0919\u094D\u0916",
        "\u2026\u00A1",
        "\u0919\u094D\u0917",
        "\u2020\u00A1",
        "\u0919\u094D\u0918",
        "\u2021\u00A1",
        "\u0919\u094D\u0915\u094D\u0924",
        "\u02C6\u00A1",
        "\u0919\u094D\u0919",
        "\u2030\u00A1",
        "\u0919\u094D\u092E",
        "\u0160",
        "\u091A\u094D\u091A",
        "\u2039",
        "\u091C\u094D\u091C",
        "\u0152",
        "\u0921\u094D\u0921",
        "\u008D",
        "\u0921\u094D\u0922",
        "\u017D",
        "\u0921\u094D\u092F",
        "\u008F",
        "\u091F\u094D\u091F",
        "\u0090",
        "\u091F\u094D\u0920",
        "\u2022",
        "\u0921\u094D\u0922",
        "\u2013",
        "\u091F\u094D\u091F",
        "\u2014",
        "\u091F\u094D\u0920",
        "\u02DC",
        "\u0922\u094D\u0922",
        "\u2122",
        "\u0939\u0943",
        "\u0161",
        "\u091F\u094D\u092F",
        "\u203A",
        "\u0920\u094D\u0920",
        "\u0153",
        "\u0920\u094D\u092F",
        "\u009D",
        "\u0922\u094D\u0922",
        "\u017E",
        "\u0922\u094D\u092F",
        "\u0178",
        "\u0926\u094D\u0930\u094D\u092F",
        "\u00A2",
        "\u0915\u094D\u0930",
        "\u00A3",
        "\u0915\u094D\u0924",
        "\u00A4",
        "\u0915\u094D\u0937\u094D",
        "\u00A5",
        "\u091C\u094D\u091E\u094D",
        "\u00A6",
        "\u0924\u094D\u0928\u094D",
        "\u00A7",
        "\u0924\u094D\u0930\u094D",
        "\u00A8",
        "\u0924\u094D\u0924\u094D",
        "\u00A9",
        "\u0926\u094D\u092E",
        "\u00AA",
        "\u0926\u094D\u0917",
        "\u00AB",
        "\u0926\u094D\u0918",
        "\u00AC",
        "\u0926\u094D\u0926",
        "\u00AE",
        "\u0926\u094D\u0927",
        "\u00AF",
        "\u0926\u094D\u092C",
        "\u00B0",
        "\u0926\u094D\u092D",
        "\u00B1",
        "\u0926\u094D\u092F",
        "\u00B2",
        "\u0926\u094D\u0935",
        "\u00B3",
        "\u0928\u094D\u0928\u094D",
        "\u00B4",
        "\u0936\u094D\u0930\u094D",
        "\u00B5",
        "\u0936\u094D\u0935\u094D",
        "\u03BC",
        "\u0936\u094D\u0935",
        "\u00B6",
        "\u0936\u094D\u091A\u094D",
        "\u00B7",
        "\u0937\u094D\u091F",
        "\u00B8",
        "\u0937\u094D\u0920",
        "\u00B9",
        "\u0937\u094D\u091F",
        "\u00BA",
        "\u0939\u094D\u0923",
        "\u00BB",
        "\u0939\u094D\u0928",
        "\u00BC",
        "\u0939\u094D\u092E",
        "\u00BD",
        "\u0939\u094D\u092F",
        "\u00BE",
        "\u0939\u094D\u0930",
        "\u00BF",
        "\u0939\u094D\u0932",
        "\u00C0",
        "\u0939\u094D\u0935",
        "\u00EA",
        "\u094D\u0930",
        "\u00EB",
        "\u094D\u0930",
        "\u00EC",
        "\u094D\u0930",
        "\u00ED",
        "\u094D\u0930",
        "A",
        "\u0905",
        "B",
        "\u0911",
        "C",
        "\u0907",
        "D",
        "\u0908",
        "E",
        "\u0909",
        "F",
        "\u090A",
        "G",
        "\u090B",
        "H",
        "\u0960",
        "L\u00E5",
        "\u0910",
        "L",
        "\u090F",
        "Y",
        "\u0915\u094D",
        "Z",
        "\u0916\u094D",
        "a",
        "\u0917\u094D",
        "b",
        "\u0918\u094D",
        "M",
        "\u0915",
        "X",
        "\u0919",
        "c",
        "\u091A\u094D",
        "e",
        "\u091C\u094D",
        "f",
        "\u091D\u094D",
        "g",
        "\u091E\u094D",
        "N",
        "\u091B",
        "d",
        "\u091B",
        "O",
        "\u091F",
        "P",
        "\u0920",
        "Q",
        "\u0921",
        "R",
        "\u0922",
        "h",
        "\u0923\u094D",
        "i",
        "\u0924\u094D",
        "j",
        "\u0925\u094D",
        "k",
        "\u0927\u094D",
        "l",
        "\u0928\u094D",
        "S",
        "\u0926",
        "m",
        "\u092A\u094D",
        "n",
        "\u092B\u094D",
        "o",
        "\u092C\u094D",
        "p",
        "\u092D\u094D",
        "q",
        "\u092E\u094D",
        "T",
        "\u092B",
        "r",
        "\u092F\u094D",
        "s",
        "\u0932\u094D",
        "t",
        "\u0933\u094D",
        "u",
        "\u0935\u094D",
        "v",
        "\u0936\u094D",
        "w",
        "\u0937\u094D",
        "x",
        "\u0938\u094D",
        "y",
        "\u0939\u094D",
        "z",
        "\u0936\u094D",
        "U",
        "\u0930",
        "V",
        "\u0933",
        "W",
        "\u0939",
        "||",
        "\u0965",
        "|",
        "\u0964",
        "\u00C5",
        "\u093D",
        "\u00C6",
        "\u0901",
        "\u00F0",
        "\u0901",
        "\u00C7",
        "\u0902",
        "\u00C8",
        "\u0903",
        "\u00C9",
        "\u093E",
        "\u00CA",
        "\u093E",
        "\u00CF",
        "\u0940",
        "\u00D0",
        "\u0940",
        "\u00D1",
        "\u0941",
        "\u00D2",
        "\u0941",
        "\u00D3",
        "\u0941",
        "\u00D4",
        "\u0942",
        "\u00D5",
        "\u0942",
        "\u00D6",
        "\u0942",
        "\u00D7",
        "\u0943",
        "\u00D8",
        "\u0943",
        "\u00D9",
        "\u0943",
        "\u00DA",
        "\u0944",
        "\u00DB",
        "\u0944",
        "\u00DC",
        "\u0944",
        "\u00E3",
        "\u0946",
        "\u00E4",
        "\u0945",
        "\u00E5",
        "\u0947",
        "\u00E6",
        "\u0948",
        "\u00E7",
        "\u094D",
        "\u00E8",
        "\u094D",
        "\u00E9",
        "\u094D",
        "`",
        "\u2018",
        "\u094D\u093E",
        "",
        "\u094D\u094B",
        "\u0947",
        "\u094D\u094C",
        "\u0948",
        "\u0905\u094B",
        "\u0913",
        "\u0905\u093E",
        "\u0906",
        "\u0906\u0948",
        "\u0914",
        "\u0906\u0947",
        "\u0913",
        "\u093E\u094B",
        "\u094B",
        "\u093E\u0945",
        "\u0949",
        "\u0945\u093E",
        "\u0949",
        "\u093E\u0947",
        "\u094B",
        "\u0902\u0941",
        "\u0941\u0902",
        "\u0947\u0947",
        "\u0947",
        "\u0905\u0948",
        "\u0905\u200D\u0948",
        "\u093E\u0947",
        "\u094B",
        "\u0905\u0947",
        "\u0905\u200D\u0947",
        "\u0902\u093E",
        "\u093E\u0902",
        "\u0905\u0945",
        "\u0905\u200D\u0945",
        "\u093E\u0948",
        "\u094C",
        "\u0948\u093E",
        "\u094C",
        "\u0902\u0943",
        "\u0943\u0902",
        "\u0901\u093E",
        "\u093E\u0901",
        "\u0901\u0942",
        "\u0942\u0901",
        "\u0947\u093E",
        "\u094B",
        "\u0902\u0947",
        "\u0947\u0902",
        "\u093E\u0947\u0902",
        "\u094B\u0902",
        "\u0945\u0902",
        "\u0901",
        "\u0902\u0945",
        "\u0901",
        " \u0903",
        " :",
        "\u0902\u0942",
        "\u0942\u0902",
        "0",
        "\u0966",
        "1",
        "\u0967",
        "2",
        "\u0968",
        "3",
        "\u0969",
        "4",
        "\u096A",
        "5",
        "\u096B",
        "6",
        "\u096C",
        "7",
        "\u096D",
        "8",
        "\u096E",
        "9",
        "\u096F",
        "\u0917\u0903\u0947",
        "\u0917\u0947",
        "\u0917\u0903\u0902",
        "\u0917\u0902",
        "\u092F\u094D\u0901",
        "\u092F\u0901\u094D",
      ],
      l = e.length,
      t = text,
      c = text.length,
      a = "",
      r = 0,
      g = 0,
      n = 1;
    1 == n;

  ) {
    if (((r = g), g < c - 6e3))
      for (
        g += 6e3;
        ("\\n" != text.charAt(g)) &
        ("\\t" != text.charAt(g)) &
        (" " != text.charAt(g));

      )
        g--;
    else (g = c), (n = 0);
    t = text.substring(r, g);
    p();
    a += t;
    return a;
  }
  function p() {
    let input_symbol_idx;
    if ("" != t) {
      for (
        t = (t = (t = t.replace(
          /([\u00C6\u00F0\u00C7\u00D1\u00D2\u00D3\u00D4\u00D5\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00E3\u00E4\u00E5\u00E6\u00E7]*)\u00A1/g,
          "\u00A1$1"
        )).replace(/([\u00CB\u00CC\u00CD\u00CE])([\\s]+)/g, "$1")).replace(
          /\\s([\u00C5\u00C6\u00F0\u00C7\u00C8\u00A1\u00C9\u00CA\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00E3\u00E4\u00E5\u00E6\u00E7])/g,
          "$1"
        ),
          input_symbol_idx = 0;
        input_symbol_idx < l - 1;
        input_symbol_idx += 2
      )
        for (let idx = 0; -1 != idx; )
          (t = t.replace(e[input_symbol_idx], e[input_symbol_idx + 1])),
            (idx = t.indexOf(e[input_symbol_idx]));
      for (
        var c = (t = t.replace(/[\u00CC\u00CD\u00CE]/g, "\u00CB")).indexOf(
          "\u00CB"
        );
        -1 != c;

      ) {
        var a = t.charAt(c + 1),
          r = "\u00CB" + a;
        c = (t = t.replace(r, a + "\u093F")).search(/\u00CB/, c + 1);
      }
      for (var g = t.indexOf("\u093F\u094D"); -1 != g; ) {
        r = "\u093F\u094D" + (n = t.charAt(g + 2));
        g = (t = t.replace(r, "\u094D" + n + "\u093F")).search(
          /\u093F\u094D/,
          g + 2
        );
      }
      for (g = t.indexOf("\u093F\u0902\u094D"); -1 != g; ) {
        var n;
        r = "\u093F\u0902\u094D" + (n = t.charAt(g + 3));
        g = (t = t.replace(r, "\u094D" + n + "\u093F\u0902")).search(
          /\u093F\u0902\u094D/,
          g + 3
        );
      }
      t = (t = (t = (t = (t = (t = (t = (t = t.replace(
        /\u0907\u00EF\u0902/g,
        "\u0908\u0902"
      )).replace(/\u0907\u00EF/g, "\u0908")).replace(
        /([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0933\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E\u095F\u0931\u0929])([\u093E\\\u093F\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C\\\u0902\\\u0901]*)([\u00EF])/g,
        "$3$1$2"
      )).replace(
        /(([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0933\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E\u095F\u0931\u0929]\u094D)+)([\u00EF])/g,
        "$3$1"
      )).replace(/\u00EF/g, "\u0930\u094D")).replace(
        /([ ]+)([\u093D\\\u094D\\\u093E\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C\\\u0902\\\u0901\\\u0903])/g,
        "$2"
      )).replace(
        /([\u0902\u0901])([\u093E\\\u093F\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C])/g,
        "$2$1"
      )).replace(
        /([\u093E\\\u093F\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C\\\u0902\\\u0901])([\u093E\\\u093F\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C])/g,
        "$1"
      );
    }
  }
}
export function unicodeToBaraha(text) {
  for (
    var e = [
        "\u00C1",
        "\u0950",
        "\u00FE",
        "\u0951",
        "\u00FD",
        "\u0952",
        "\u00C2",
        "\u0930\u0941",
        "\u00C3",
        "\u0930\u0942",
        "\u201A",
        "\u0915\u094D\u0915",
        "\u0192\u00A1\u00FB",
        "\u0919\u094D\u0915",
        "\u201E\u00A1\u00FB",
        "\u0919\u094D\u0916",
        "\u2026\u00A1\u00FB",
        "\u0919\u094D\u0917",
        "\u2020\u00A1\u00FB",
        "\u0919\u094D\u0918",
        "\u2021\u00A1\u00FB",
        "\u0919\u094D\u0915\u094D\u0924",
        "\u02C6\u00A1\u00FB",
        "\u0919\u094D\u0919",
        "\u2030\u00A1\u00FB",
        "\u0919\u094D\u092E",
        "\u0160",
        "\u091A\u094D\u091A",
        "\u2039",
        "\u091C\u094D\u091C",
        "\u0152",
        "\u0921\u094D\u0921",
        "\u008D",
        "\u0921\u094D\u0922",
        "\u017D",
        "\u0921\u094D\u092F",
        "\u008F",
        "\u091F\u094D\u091F",
        "\u0090",
        "\u091F\u094D\u0920",
        "\u2022",
        "\u0921\u094D\u0922",
        "\u2013",
        "\u091F\u094D\u091F",
        "\u2014",
        "\u091F\u094D\u0920",
        "\u02DC",
        "\u0922\u094D\u0922",
        "\u2122",
        "\u0939\u0943",
        "\u0161",
        "\u091F\u094D\u092F",
        "\u203A",
        "\u0920\u094D\u0920",
        "\u0153",
        "\u0920\u094D\u092F",
        "\u009D",
        "\u0922\u094D\u0922",
        "\u017E",
        "\u0922\u094D\u092F",
        "\u0178",
        "\u0926\u094D\u0930\u094D\u092F",
        "\u00A2",
        "\u0915\u094D\u0930",
        "\u00A3",
        "\u0915\u094D\u0924",
        "\u00A4",
        "\u0915\u094D\u0937\u094D",
        "\u00A4\u00C9",
        "\u0915\u094D\u0937",
        "\u00A5",
        "\u091C\u094D\u091E\u094D",
        "\u00A5\u00C9",
        "\u091C\u094D\u091E",
        "\u00A6",
        "\u0924\u094D\u0928\u094D",
        "\u00A6\u00C9",
        "\u0924\u094D\u0928",
        "\u00A7",
        "\u0924\u094D\u0930\u094D",
        "\u00A7\u00C9",
        "\u0924\u094D\u0930",
        "\u00A8",
        "\u0924\u094D\u0924\u094D",
        "\u00A8\u00C9",
        "\u0924\u094D\u0924",
        "\u00A9",
        "\u0926\u094D\u092E",
        "\u00AA",
        "\u0926\u094D\u0917",
        "\u00AB",
        "\u0926\u094D\u0918",
        "\u00AC",
        "\u0926\u094D\u0926",
        "\u00AE",
        "\u0926\u094D\u0927",
        "\u00AF",
        "\u0926\u094D\u092C",
        "\u00B0",
        "\u0926\u094D\u092D",
        "\u00B1",
        "\u0926\u094D\u092F",
        "\u00B2",
        "\u0926\u094D\u0935",
        "\u00B3",
        "\u0928\u094D\u0928\u094D",
        "\u00B3\u00C9",
        "\u0928\u094D\u0928",
        "\u00B4",
        "\u0936\u094D\u0930\u094D",
        "\u00B4\u00C9",
        "\u0936\u094D\u0930",
        "\u00B5",
        "\u0936\u094D\u0935\u094D",
        "\u03BC\u00C9",
        "\u0936\u094D\u0935",
        "\u00B6",
        "\u0936\u094D\u091A\u094D",
        "\u00B6\u00C9",
        "\u0936\u094D\u091A",
        "\u00B7",
        "\u0937\u094D\u091F",
        "\u00B8",
        "\u0937\u094D\u0920",
        "\u00B9",
        "\u0937\u094D\u091F",
        "\u00BA",
        "\u0939\u094D\u0923",
        "\u00BB",
        "\u0939\u094D\u0928",
        "\u00BC",
        "\u0939\u094D\u092E",
        "\u00BD",
        "\u0939\u094D\u092F",
        "\u00BE",
        "\u0939\u094D\u0930",
        "\u00BF",
        "\u0939\u094D\u0932",
        "\u00C0",
        "\u0939\u094D\u0935",
        "\u00EA",
        "\u094D\u0930",
        "\u00EB",
        "\u094D\u0930",
        "\u00EC",
        "\u094D\u0930",
        "\u00ED",
        "\u094D\u0930",
        "A",
        "\u0905",
        "B",
        "\u0911",
        "C",
        "\u0907",
        "D",
        "\u0908",
        "E",
        "\u0909",
        "F",
        "\u090A",
        "G",
        "\u090B",
        "H",
        "\u0960",
        "L\u00E5",
        "\u0910",
        "L",
        "\u090F",
        "A\u00C9",
        "\u0906",
        "A\u00C9\u00E5",
        "\u0913",
        "A\u00C9\u00E6",
        "\u0914",
        "Y",
        "\u0915\u094D",
        "M\u00FC",
        "\u0915",
        "Z",
        "\u0916\u094D",
        "Z\u00C9",
        "\u0916",
        "a",
        "\u0917\u094D",
        "a\u00C9",
        "\u0917",
        "b",
        "\u0918\u094D",
        "b\u00C9",
        "\u0918",
        "M",
        "\u0915",
        "X",
        "\u0919",
        "c",
        "\u091A\u094D",
        "c\u00C9",
        "\u091A",
        "e",
        "\u091C\u094D",
        "e\u00C9",
        "\u091C",
        "f",
        "\u091D\u094D",
        "f\u00C9",
        "\u091D",
        "g",
        "\u091E\u094D",
        "g\u00C9",
        "\u091E",
        "N",
        "\u091B",
        "O",
        "\u091F",
        "P",
        "\u0920",
        "Q",
        "\u0921",
        "R",
        "\u0922",
        "h",
        "\u0923\u094D",
        "h\u00C9",
        "\u0923",
        "i",
        "\u0924\u094D",
        "i\u00C9",
        "\u0924",
        "S",
        "\u0926",
        "j",
        "\u0925\u094D",
        "j\u00C9",
        "\u0925",
        "k",
        "\u0927\u094D",
        "k\u00C9",
        "\u0927",
        "l",
        "\u0928\u094D",
        "l\u00C9",
        "\u0928",
        "m",
        "\u092A\u094D",
        "m\u00C9",
        "\u092A",
        "T",
        "\u092B",
        "o",
        "\u092C\u094D",
        "o\u00C9",
        "\u092C",
        "p",
        "\u092D\u094D",
        "p\u00C9",
        "\u092D",
        "q",
        "\u092E\u094D",
        "q\u00C9",
        "\u092E",
        "r",
        "\u092F\u094D",
        "r\u00C9",
        "\u092F",
        "s",
        "\u0932\u094D",
        "s\u00C9",
        "\u0932",
        "t",
        "\u0933\u094D",
        "u",
        "\u0935\u094D",
        "u\u00C9",
        "\u0935",
        "v",
        "\u0936\u094D",
        "v\u00C9",
        "\u0936",
        "w",
        "\u0937\u094D",
        "w\u00C9",
        "\u0937",
        "x",
        "\u0938\u094D",
        "x\u00C9",
        "\u0938",
        "y",
        "\u0939\u094D",
        "U",
        "\u0930",
        "V",
        "\u0933",
        "W",
        "\u0939",
        "||",
        "\u0965",
        "|",
        "\u0964",
        "\u00C5",
        "\u093D",
        "\u00C6",
        "\u0901",
        "\u00C7",
        "\u0902",
        "\u00C8",
        "\u0903",
        "\u00C9",
        "\u093E",
        "\u00CF",
        "\u0940",
        "\u00D1",
        "\u0941",
        "\u00D2",
        "\u0941",
        "\u00D3",
        "\u0941",
        "\u00D4",
        "\u0942",
        "\u00D5",
        "\u0942",
        "\u00D6",
        "\u0942",
        "\u00D7",
        "\u0943",
        "\u00D8",
        "\u0943",
        "\u00D9",
        "\u0943",
        "\u00DA",
        "\u0944",
        "\u00DB",
        "\u0944",
        "\u00DC",
        "\u0944",
        "\u00E3",
        "\u0946",
        "\u00E4",
        "\u0945",
        "\u00E5",
        "\u0947",
        "\u00E6",
        "\u0948",
        "\u00C9\u00E5",
        "\u094B",
        "\u00C9\u00E6",
        "\u094C",
        "\u00E7",
        "\u094D",
        "`",
        "\u2018",
        "0",
        "\u0966",
        "1",
        "\u0967",
        "2",
        "\u0968",
        "3",
        "\u0969",
        "4",
        "\u096A",
        "5",
        "\u096B",
        "6",
        "\u096C",
        "7",
        "\u096D",
        "8",
        "\u096E",
        "9",
        "\u096F",
      ],
      l = e.length,
      t = text,
      c = text.length,
      a = "",
      r = 0,
      g = 0,
      n = 1;
    1 == n;

  ) {
    if (((r = g), g < c - 6e3))
      for (
        g += 6e3;
        ("\\n" != text.charAt(g)) &
        ("\\t" != text.charAt(g)) &
        (" " != text.charAt(g));

      )
        g--;
    else (g = c), (n = 0);
    t = text.substring(r, g);
    p();
    a += t;
    return a;
  }
  function p() {
    let input_symbol_idx;
    if ("" != t) {
      for (
        t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t =
          (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t =
            (t = (t = (t = (t = (t = (t = (t = (t = t.replace(
              /\u094D([ \\r\\n\\,\\\u0964])/g,
              "\u00E7$1"
            )).replace(/\u0915\u093C/, "\u0958")).replace(
              /\u0916\u093C\u200C/g,
              "\u0959"
            )).replace(/\u0917\u093C/g, "\u095A")).replace(
              /\u091C\u093C/g,
              "\u095B"
            )).replace(/\u0921\u093C/g, "\u095C")).replace(
              /\u0922\u093C/g,
              "\u095D"
            )).replace(/\u0928\u093C/g, "\u0929")).replace(
              /\u092B\u093C/g,
              "\u095E"
            )).replace(/\u092F\u093C/g, "\u095F")).replace(
            /\u0930\u093C/g,
            "\u0931"
          )).replace(/\u093F/g, "\u00CD")).replace(
            /([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u095C\u0922\u095D\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])([\u00CD])/g,
            "$2$1"
          )).replace(
            /([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u095C\u0922\u095D\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])(\u094D)([\u00CD])/g,
            "$3$1$2"
          )).replace(
            /([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u095C\u0922\u095D\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])(\u094D)([\u00CD])/g,
            "$3$1$2"
          )).replace(
            /\u00CD([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u095C\u0922\u095D\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])\u094D/g,
            "\u00CE$1\u094D"
          )).replace(/\u00CD\u0930/g, "\u00CB\u0930")).replace(
            /\u0930\u094D([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])([\u094D])/g,
            "$1$2\u0930\u094D"
          )).replace(
            /\u0930\u094D([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])([\u094D])/g,
            "$1$2\u0930\u094D"
          )).replace(
            /\u0930\u094D([\u0915\u0916\u0917\u0918\u0919\u091A\u091B\u091C\u091D\u091E\u091F\u0920\u0921\u0922\u0923\u0924\u0925\u0926\u0927\u0928\u092A\u092B\u092C\u092D\u092E\u092F\u0930\u0932\u0935\u0936\u0937\u0938\u0939\u0958\u0959\u095A\u095B\u095C\u095D\u095E])([\\\u093E\\\u0945\\\u093F\\\u0940\\\u0941\\\u0942\\\u0943\\\u0947\\\u0948\\\u094B\\\u094C\\\u0902\\\u0901]*)/g,
            "$1$2\u00EF"
          )).replace(/\u0958/g, "\u00C4\u0915")).replace(
            /\u095C/g,
            "\u00C4\u0921"
          )).replace(/\u095D/g, "\u00C4\u0922")).replace(
          /\u095E/g,
          "\u00C4\u092B"
        )).replace(/\u0931/g, "\u00C4\u0930")).replace(
          /\u0959\u200C/g,
          "\u00C4\u0916"
        )).replace(/\u095A/g, "\u00C4\u0917")).replace(
          /\u095B/g,
          "\u00C4\u091C"
        )).replace(/\u0929/g, "\u00C4\u0928")).replace(
          /\u095F/g,
          "\u00C4\u092F"
        )).replace(/\u0915\u0940/g, "M\u00FC\u00D0")).replace(
          /\u0915([\u0941\\\u0942\\\u0943\\\u0944\\\u0947\\\u0948\\\u0902\\\u0901]*)/g,
          "M$1\u00FC"
        )).replace(
          /\u0915\u094D\u0924([\u0941\\\u0942\\\u0943\\\u0944\\\u0947\\\u0948\\\u0902\\\u0901]*)/g,
          "\u00A3$1\u00FC"
        )).replace(
          /\u0915\u094D\u0930([\u0941\\\u0942\\\u0943\\\u0944\\\u0947\\\u0948\\\u0902\\\u0901]*)/g,
          "\u00A2$1\u00FC"
        )).replace(
          /\u092B([\u0941\\\u0942\\\u0943\\\u0944\\\u0947\\\u0948\\\u0902\\\u0901]*)/g,
          "T$1\u00FC"
        )).replace(/([\u0939\u091B\u0921\u092B])/g, "$1\u00FB"),
          input_symbol_idx = 0;
        input_symbol_idx < l - 1;
        input_symbol_idx += 2
      )
        for (let idx = 0; -1 != idx; )
          (t = t.replace(e[input_symbol_idx + 1], e[input_symbol_idx])),
            (idx = t.indexOf(e[input_symbol_idx + 1]));
      t = t.replace(
        /\u00FB([\u00C6\u00F0\u00C7\u00D1\u00D2\u00D3\u00D4\u00D5\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00E3\u00E4\u00E5\u00E6\u00E7])/g,
        "$1\u00FB"
      );
    }
  }
}
