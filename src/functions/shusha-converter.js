export function shushaToUnicode(text) {
  var e = [
      "D,",
      "Z,",
      "\u00B9",
      "\u00D1",
      "\u00BA",
      ".",
      "\u00C2",
      "\u00B3",
      "\u00B4",
      "\u00A1",
      "\u00A3",
      "\u00A4",
      "\u00A5",
      "\u00C0",
      "!",
      "?\u2019",
      "?\u201D",
      "? ",
      ",D",
      "$",
      "&",
      "(",
      ")",
      "+",
      "<",
      ">",
      "E",
      "V",
      "W",
      "_",
      "w",
      "x",
      "{",
      "~",
      "\u0153",
      "\u0178",
      "\u00C9",
      "\u00CB",
      "\u00CC",
      "\u00CD",
      "\u00CE",
      "`",
      "/",
      "@",
      "k,",
      "k",
      "#",
      "K,",
      "K",
      "\u00D3",
      "ga,",
      "g",
      "G",
      "=",
      "c",
      "C",
      "j,",
      "ja,",
      "j",
      "J",
      "H",
      "T",
      "z",
      "D",
      "Z",
      "N",
      "%",
      "t",
      "q",
      "d",
      "Q",
      "n",
      "P",
      "p",
      "F,",
      "f,",
      "F",
      "f",
      "\u00D4",
      "b",
      "B",
      "m",
      "y",
      "r",
      "l",
      "L",
      "v",
      "S",
      "X",
      "\u00CF",
      "Y",
      "s",
      "*",
      "h",
      "AaO",
      "Aao",
      "Aa^",
      "Aa",
      "A",
      "\u0161",
      "[-",
      "[",
      "]",
      "}",
      "?",
      ";",
      "eo",
      "e",
      "aO",
      "ao",
      "a",
      "I",
      "u",
      "U",
      "R",
      "o",
      "O",
      "\u00D0",
      "M",
      ":",
      "\\\\",
      "^",
      "|",
      "\u00BA",
      "\u00B9",
      "\u00D1",
      ",",
      "\u00B8",
      "\u094D\u093E",
      "\u094D\u094B",
      "\u094D\u094C",
      "\u0905\u094B",
      "\u0905\u093E",
      "\u0906\u0948",
      "\u0906\u0947",
      "\u093E\u094B",
      "\u093E\u0945",
      "\u0945\u093E",
      "\u093E\u0947",
      "\u0902\u0941",
      "\u0947\u0947",
      "\u0905\u0948",
      "\u093E\u0947",
      "\u0905\u0947",
      "\u0902\u093E",
      "\u0905\u0945",
      "\u093E\u0948",
      "\u0948\u093E",
      "\u0902\u0943",
      "\u0901\u093E",
      "\u0901\u0942",
      "\u0947\u093E",
      "\u0902\u0947",
      "\u093E\u0947\u0902",
      "\u0945\u0902",
      "\u0902\u0945",
      " \u0903",
      "\u0902\u0942",
    ],
    a = [
      "\u095C",
      "\u095D",
      "\u2013",
      "!",
      ".",
      "\u0964",
      ";",
      "(",
      ")",
      "{",
      "}",
      "[",
      "]",
      "/",
      "\u0950",
      "\u00C6\u2019",
      "\u00C6\u201D",
      "\u00C6 ",
      "\u095C",
      "\u0930\u0942",
      "\u091C\u094D\u091E",
      "\u0939\u094D\u092F",
      "\u0939\u0943",
      "\u091F\u094D\u091F",
      "\u0924\u094D\u0924\u094D",
      "\u0915\u094D\u0924",
      "\u0936\u094D\u0930\u094D",
      "\u0926\u094D\u092F",
      "\u0926\u094D\u0935",
      "\u0926\u094D\u0926",
      "\u0926\u094D\u0927",
      "\u0915\u094D\u0937\u094D",
      "\u0920\u094D\u0920",
      "\u0924\u094D\u0930",
      "\u0939\u094D\u0930",
      "\u091C\u093F",
      "\u0930\u0941",
      "\u0915\u094D\u0930",
      "\u0915\u0943",
      "\u092B\u094D\u0930",
      "\u092B\u0943",
      "\u094D\u0930",
      "\u094D\u0930",
      "\u0915\u094D",
      "\u0958",
      "\u0915",
      "\u0916\u094D",
      "\u0959",
      "\u0916",
      "\u0959",
      "\u095A",
      "\u0917\u094D",
      "\u0918\u094D",
      "\u0919",
      "\u091A\u094D",
      "\u091B",
      "\u095B\u094D",
      "\u095B",
      "\u091C\u094D",
      "\u091D\u094D",
      "\u091E\u094D",
      "\u091F",
      "\u0920",
      "\u0921",
      "\u0922",
      "\u0923\u094D",
      "\u0924\u094D",
      "\u0924",
      "\u0925\u094D",
      "\u0926",
      "\u0927\u094D",
      "\u0928\u094D",
      "\u092A\u094D",
      "\u092A",
      "\u095E\u094D",
      "\u095E",
      "\u092B\u094D",
      "\u092B",
      "\u095E",
      "\u092C\u094D",
      "\u092D\u094D",
      "\u092E\u094D",
      "\u092F\u094D",
      "\u0930",
      "\u0932\u094D",
      "\u0933",
      "\u0935\u094D",
      "\u0936\u094D",
      "\u0936\u094D",
      "\u0936\u094D",
      "\u0937\u094D",
      "\u0938\u094D",
      "\u0939\u094D",
      "\u0939",
      "\u0914",
      "\u0913",
      "\u0911",
      "\u0906",
      "\u0905",
      "\u0908",
      "\u0908",
      "\u0907",
      "\u0909",
      "\u090A",
      "\u090B",
      "\u090C",
      "\u0910",
      "\u090F",
      "\u094C",
      "\u094B",
      "\u093E",
      "\u0940",
      "\u0941",
      "\u0942",
      "\u0943",
      "\u0947",
      "\u0948",
      "\u0901",
      "\u0902",
      "\u0903",
      "\u094D",
      "\u0945",
      "\u093D",
      "\u093C",
      "\u2013",
      "!",
      ".",
      ",",
      "",
      "\u0947",
      "\u0948",
      "\u0913",
      "\u0906",
      "\u0914",
      "\u0913",
      "\u094B",
      "\u0949",
      "\u0949",
      "\u094B",
      "\u0941\u0902",
      "\u0947",
      "\u0905\u200D\u0948",
      "\u094B",
      "\u0905\u200D\u0947",
      "\u093E\u0902",
      "\u0905\u200D\u0945",
      "\u094C",
      "\u094C",
      "\u0943\u0902",
      "\u093E\u0901",
      "\u0942\u0901",
      "\u094B",
      "\u0947\u0902",
      "\u094B\u0902",
      "\u0901",
      "\u0901",
      " :",
      "\u0942\u0902",
    ],
    r = e.length,
    i = text;
  !(function () {
    if ("" != i) {
      for (let input_symbol_idx = 0; input_symbol_idx < r; input_symbol_idx++)
        for (let idx = 0; -1 != idx; )
          (i = i.replace(e[input_symbol_idx], a[input_symbol_idx])),
            (idx = i.indexOf(e[input_symbol_idx]));
      for (var t = i.indexOf("i"); -1 != t; ) {
        var o = i.charAt(t + 1),
          l = "i" + o;
        (i = i.replace(l, o + "\u093F")), (t = i.search(/i/, t + 1));
      }
      for (var c = i.indexOf("\u093F\u094D"); -1 != c; ) {
        var _ = i.charAt(c + 2),
          l = "\u093F\u094D" + _;
        (i = i.replace(l, "\u094D" + _ + "\u093F")),
          (c = i.search(/\u093F\u094D/, c + 2));
      }
      for (var c = i.indexOf("\u093F\u0902\u094D"); -1 != c; ) {
        var _ = i.charAt(c + 3),
          l = "\u093F\u0902\u094D" + _;
        (i = i.replace(l, "\u094D" + _ + "\u093F\u0902")),
          (c = i.search(/\u093F\u0902\u094D/, c + 3));
      }
      let set_of_matras =
        "\u093E \u093F \u0940 \u0941 \u0942 \u0943 \u0947 \u0948 \u094B \u094C \u0902 : \u0901 \u0945";
      for (var n = i.indexOf("-"); n > 0; ) {
        probable_position_of_half_r = n - 1;
        for (
          var p = i.charAt(probable_position_of_half_r);
          null != set_of_matras.match(p);

        )
          (probable_position_of_half_r -= 1),
            (p = i.charAt(probable_position_of_half_r));
        (l = i.substr(
          probable_position_of_half_r,
          n - probable_position_of_half_r
        )),
          (new_replacement_string = "\u0930\u094D" + l),
          (l += "-"),
          (i = i.replace(l, new_replacement_string)),
          (n = i.indexOf("-"));
      }
      i = (i = (i = (i = (i = (i = (i = (i = (i = i.replace(
        /\u00A1/g,
        "{"
      )).replace(/\u00A3/g, "}")).replace(/\u00A4/g, "[")).replace(
        /\u00A5/g,
        "]"
      )).replace(/\u00B2/g, "!")).replace(/\u00B3/g, "(")).replace(
        /\u00B4/g,
        ")"
      )).replace(/\u00B5/g, "*")).replace(/\u00C6/g, "?");
    }
  })();
  let processed_text = i;
  return processed_text;
}
export function unicodeToShusha(text) {
  var e = [
      "\u0915\u093C",
      "\u0916\u093C",
      "\u0917\u093C",
      "\u091C\u093C",
      "\u0921\u093C",
      "\u0922\u093C",
      "\u092B\u093C",
      "!",
      ".",
      "\u0964",
      ";",
      "(",
      ")",
      "{",
      "}",
      "[",
      "]",
      "/",
      "<",
      "=",
      ">",
      ",",
      "+",
      "*",
      "%",
      "\u0959\u094D",
      "\u0959",
      "\u095E\u094D",
      "\u095E",
      "\u0950",
      "?",
      "\u091C\u094D\u091E",
      "\u0939\u094D\u092F",
      "\u0939\u0943",
      "\u091F\u094D\u091F",
      "\u0924\u094D\u0924\u094D",
      "\u0915\u094D\u0924",
      "\u0936\u094D\u0930",
      "\u0926\u094D\u092F",
      "\u0926\u094D\u0935",
      "\u0926\u094D\u0926",
      "\u0926\u094D\u0927",
      "\u0915\u094D\u0937\u094D",
      "\u0915\u094D\u0937",
      "\u0920\u094D\u0920",
      "\u0924\u094D\u0930",
      "\u0939\u094D\u0930",
      "\u091C\u093F",
      "\u0915\u094D\u0930\u0941",
      "\u0915\u094D\u0930\u0942",
      "\u094D\u0930\u0941",
      "\u094D\u0930\u0942",
      "\u0930\u0942",
      "\u0930\u0941",
      "\u0915\u094D\u0930",
      "\u0915\u0943",
      "\u092B\u094D\u0930",
      "\u092B\u0943",
      "\u095C",
      "\u095D",
      "\u091F\u094D\u0930",
      "\u0921\u094D\u0930",
      "\u0922\u094D\u0930",
      "\u094D\u0930",
      "\u0958",
      "\u095A",
      "\u095B\u094D",
      "\u0915\u094D",
      "\u0915",
      "\u0916\u094D",
      "\u0916",
      "\u0917\u094D",
      "\u0917",
      "\u0918\u094D",
      "\u0918",
      "\u0919",
      "\u091A\u094D",
      "\u091A",
      "\u091B",
      "\u095B",
      "\u091C\u094D",
      "\u091C",
      "\u091D\u094D",
      "\u091D",
      "\u091E\u094D",
      "\u091E",
      "\u091F",
      "\u0920",
      "\u0921",
      "\u0922",
      "\u0923\u094D",
      "\u0923",
      "\u0924\u094D",
      "\u0924",
      "\u0925\u094D",
      "\u0925",
      "\u0926",
      "\u0927\u094D",
      "\u0927",
      "\u0928\u094D",
      "\u0928",
      "\u092A\u094D",
      "\u092A",
      "\u092B\u094D",
      "\u092B",
      "\u092C\u094D",
      "\u092C",
      "\u092D\u094D",
      "\u092D",
      "\u092E\u094D",
      "\u092E",
      "\u092F\u094D",
      "\u092F",
      "\u0930",
      "\u0932\u094D",
      "\u0932",
      "\u0933",
      "\u0935\u094D",
      "\u0935",
      "\u0936\u094D",
      "\u0936",
      "\u0937\u094D",
      "\u0937",
      "\u0938\u094D",
      "\u0938",
      "\u0939\u094D",
      "\u0939",
      "\u0914",
      "\u0913",
      "\u0911",
      "\u0906",
      "\u0905",
      "\u0908",
      "\u0908",
      "\u0907",
      "\u0909",
      "\u090A",
      "\u090B",
      "\u090C",
      "\u0910",
      "\u090F",
      "\u094C",
      "\u094B",
      "\u0949",
      "\u093E",
      "\u0940",
      "\u0941",
      "\u0942",
      "\u0943",
      "\u0947",
      "\u0948",
      "\u0901",
      "\u0902",
      ":",
      "\u0903",
      "\u094D",
      "\u0945",
      "\u093D",
      "\u093C",
    ],
    a = [
      "\u0958",
      "\u0959",
      "\u095A",
      "\u095B",
      "\u095C",
      "\u095D",
      "\u095E",
      "\u00D1",
      "\u00BA",
      ".",
      "\u00C2",
      "\u00B3",
      "\u00B4",
      "\u00A1",
      "\u00A3",
      "\u00A4",
      "\u00A5",
      "\u00C0",
      "\u00C3",
      "\u00C4",
      "\u00C5",
      "\u00B8",
      "\u2020",
      "\u00B5",
      "\u2030",
      "K,",
      "\u00D3",
      "F,",
      "\u00D4",
      "!",
      "\u00C6",
      "&",
      "(",
      ")",
      "+",
      "<",
      ">",
      "Ea",
      "V",
      "W",
      "_",
      "w",
      "x",
      "xa",
      "{",
      "~",
      "\u0153",
      "\u0178",
      "\u00CBu",
      "\u00CBu",
      "`u",
      "`U",
      "$",
      "\u00C9",
      "\u00CB",
      "\u00CC",
      "\u00CD",
      "\u00CE",
      "D,",
      "Z,",
      "T/",
      "D/",
      "Z/",
      "`",
      "k,",
      "ga,",
      "j,",
      "@",
      "k",
      "#",
      "K",
      "g",
      "ga",
      "G",
      "Ga",
      "=",
      "c",
      "ca",
      "C",
      "ja,",
      "j",
      "ja",
      "J",
      "Ja",
      "H",
      "Ha",
      "T",
      "z",
      "D",
      "Z",
      "N",
      "Na",
      "%",
      "t",
      "q",
      "qa",
      "d",
      "Q",
      "Qa",
      "n",
      "na",
      "P",
      "p",
      "F",
      "f",
      "b",
      "ba",
      "B",
      "Ba",
      "m",
      "ma",
      "y",
      "ya",
      "r",
      "l",
      "la",
      "L",
      "v",
      "va",
      "S",
      "Sa",
      "Y",
      "Ya",
      "s",
      "sa",
      "*",
      "h",
      "AaO",
      "Aao",
      "Aa^",
      "Aa",
      "A",
      "\u0161",
      "[-",
      "[",
      "]",
      "}",
      "?",
      ";",
      "eo",
      "e",
      "aO",
      "ao",
      "a^",
      "a",
      "I",
      "u",
      "U",
      "R",
      "o",
      "O",
      "\u00D0",
      "M",
      "\u00C1",
      ":",
      "\\\\",
      "^",
      "|",
      ",",
    ],
    r = e.length,
    i = text;
  !(function () {
    if ("" != i) {
      for (var t = i.indexOf("\u093F"); -1 != t; ) {
        var o = i.charAt(t - 1);
        for (
          i = i.replace(o + "\u093F", "i" + o), t -= 1;
          ("\u094D" == i.charAt(t - 1)) & (0 != t);

        ) {
          var l = i.charAt(t - 2) + "\u094D";
          (i = i.replace(l + "i", "i" + l)), (t -= 2);
        }
        t = i.search(/\u093F/, t + 1);
      }
      let set_of_matras =
        "\u093E\u093F\u0940\u0941\u0942\u0943\u0947\u0948\u094B\u094C\u0902:\u0901\u0945";
      for (
        var c = (i = (i = (i = (i += "  ").replace(/-/g, "\u00B9")).replace(
          /\u0936\u094D\u0930\u094D/g,
          "E"
        )).replace(/\u0924\u094D\u0930\u094D\u092F/g, "~\\\\ya")).indexOf(
          "\u0930\u094D"
        );
        c > 0;

      ) {
        for (var _ = c + 2, n = i.charAt(_); null != set_of_matras.match(n); )
          (_ += 1), (n = i.charAt(_));
        var p = _ + 1;
        if (p > 0)
          for (var f = i.charAt(p); "\u094D" == f; )
            (_ = p + 1), (n = i.charAt(_)), (p = _ + 1), (f = i.charAt(p));
        (l = i.substr(c + 2, _ - c - 1)),
          (i = i.replace("\u0930\u094D" + l, l + "-")),
          (c = i.indexOf("\u0930\u094D"));
      }
      let input_symbol_idx;
      for (
        i = i.substr(0, i.length - 2), input_symbol_idx = 0;
        input_symbol_idx < r;
        input_symbol_idx++
      )
        for (let idx = 0; -1 != idx; )
          (i = i.replace(e[input_symbol_idx], a[input_symbol_idx])),
            (idx = i.indexOf(e[input_symbol_idx]));
    }
    i = (i = (i = (i = (i = (i = (i = (i = (i = (i = (i = (i = (i = (i =
      i.replace(/-ao/g, "ao-")).replace(/-a/g, "a-")).replace(
      /-I/g,
      "I-"
    )).replace(/\\ -/g, "-")).replace(/ki,/g, "ik,")).replace(
      /Ki,/g,
      "i\u00D3"
    )).replace(/gai,/g, "iga,")).replace(/fi,/g, "i\u00D4")).replace(
      /Di,/g,
      "iD,"
    )).replace(/Zi,/g, "iZ,")).replace(/jai,/g, "ija,")).replace(
      /nai,/g,
      "ina,"
    )).replace(/ri,/g, "ir,")).replace(/Li,/g, "iL,");
  })();
  let processed_text = i;
  return processed_text;
}
